@model OrchardHUN.Scripting.Models.ScriptPart
@{
    Style.Require("ScriptingAdmin");
    Script.Require("jQuery").AtFoot();
    Script.Include("//d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js");
}

<fieldset>
    <legend>@T("Scripting")</legend>
    @Html.HiddenFor(m => m.Expression)
    @Html.LabelFor(m => m.Engine, T("Scripting engine"))
    @Html.DropDownListFor(m => m.Engine,
        new SelectList(Model.RegisteredEngines.Select(engine => new SelectListItem { Text = engine.DisplayName.ToString(), Value = engine.Name }), "Value", "Text"))
    <div id="orchardhun-scripting-editor-@Model.ContentItem.Id" class="orchardhun-scripting-editor">@Model.Expression</div>
</fieldset>
<fieldset id="orchardhun-scripting-help-@Model.ContentItem.Id">
    <legend>@T("Help")</legend>
    <div>
        <div id="orchardhun-scripting-editor-sample" class="orchardhun-scripting-editor"></div>
        <span id="orchardhun-scripting-hint" class="hint"></span>
    </div>
</fieldset>

@using (Script.Foot())
{
    <script type="text/javascript">
        (function ($) {
            var engine = $("#@Html.FieldIdFor(m => m.Engine)");
            var editor = ace.edit("orchardhun-scripting-editor-@Model.ContentItem.Id");
            var expression = $("#@Html.FieldIdFor(m => m.Expression)");

            var sample = ace.edit("orchardhun-scripting-editor-sample");
            sample.setReadOnly(true);
            var hint = $("#orchardhun-scripting-hint");
            var help = { "sample": sample, "hint": hint };

            $(expression[0].form).submit(function () {
                expression.val(editor.getValue());
            });

            $("#orchardhun-scripting-help-@Model.ContentItem.Id legend")
                .expandoControl(function (controller) { return controller.next("div"); }, { collapse: false, remember: false });


            function triggerSelectedEngineChanged() {
                $(document).triggerHandler({
                    type: "selectedEngineChanged.ScriptingExtensions",
                    engine: engine.val(),
                    editor: editor,
                    help: help
                });
            }

            engine.change(function (e) {
                triggerSelectedEngineChanged();
            });

            $(document).ready(function () {
                triggerSelectedEngineChanged();
            });
        })(jQuery);
    </script>
}